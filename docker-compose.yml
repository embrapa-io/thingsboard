services:
  kafka:
    restart: unless-stopped
    image: bitnami/kafka:3.8.1
    ports:
      - ${PORT_KAFKA}:9092
      - 9093
      - 9094
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENERS: "OUTSIDE://:9092,CONTROLLER://:9093,INSIDE://:9094"
      KAFKA_CFG_ADVERTISED_LISTENERS: "OUTSIDE://localhost:9092,INSIDE://kafka:9094"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INSIDE"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker" #KRaft
      KAFKA_CFG_NODE_ID: "0" #KRaft
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER" #KRaft
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093" #KRaft
    volumes:
      - kafka_data:/bitnami
    healthcheck:
      test: "bash -c 'printf \"\" > /dev/tcp/127.0.0.1/9094; exit $$?;'"
      interval: 5s
      timeout: 4s
      retries: 6
      start_period: 5s

  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: thingsboard
    restart: unless-stopped
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready', '-d', 'thingsboard' ]
      interval: 5s
      timeout: 4s
      retries: 6
      start_period: 5s

  thingsboard:
    image: "thingsboard/tb-postgres"
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_healthy
    ports:
      - "${PORT_WEB}:9090"
      - "${PORT_MQTT}:1883"
      - "${PORT_EDGE_RPC}:7070"
      - "5683-5688:5683-5688/udp"
    environment:
      TB_QUEUE_TYPE: kafka
      TB_KAFKA_SERVERS: kafka:9094
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/thingsboard
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    volumes:
      - tb_data:/data
      - log_data:/var/log/thingsboard

  pgadmin:
    image: dpage/pgadmin4:8
    restart: unless-stopped
    ports:
      - "${PORT_PGADMIN}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  backup:
    image: prodrigestivill/postgres-backup-local
    restart: unless-stopped
    volumes:
      - backup:/backups
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=thingsboard
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - BACKUP_ON_START=TRUE
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
    profiles:
      - test
      - production

volumes:
  kafka_data:
    name: ${VOLUME_KAFKA}
    external: true

  pg_data:
    name: ${VOLUME_DB}
    external: true

  tb_data:
    name: ${VOLUME_THINGSBOARD}
    external: true

  log_data:
    name: ${VOLUME_LOG}
    external: true

  pgadmin_data:
    name: ${VOLUME_PGADMIN}
    external: true

  backup:
    name: ${VOLUME_BACKUP}
    external: true
