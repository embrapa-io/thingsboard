services:
  kafka:
    restart: unless-stopped
    image: bitnami/kafka:3.8.1
    ports:
      - ${PORT_KAFKA}:9092
      - 9093
      - 9094
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENERS: "OUTSIDE://:9092,CONTROLLER://:9093,INSIDE://:9094"
      KAFKA_CFG_ADVERTISED_LISTENERS: "OUTSIDE://localhost:9092,INSIDE://kafka:9094"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INSIDE"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker" #KRaft
      KAFKA_CFG_NODE_ID: "0" #KRaft
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER" #KRaft
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093" #KRaft
    volumes:
      - kafka_data:/bitnami

  thingsboard:
    restart: unless-stopped
    image: "thingsboard/tb-postgres"
    depends_on:
      - kafka
    ports:
      - "${PORT_WEB}:9090"
      - "${PORT_MQTT}:1883"
      - "${PORT_EDGE_RPC}:7070"
      - "5683-5688:5683-5688/udp"
    environment:
      TB_QUEUE_TYPE: kafka
      TB_KAFKA_SERVERS: kafka:9094
    volumes:
      - tb_data:/data
      - log_data:/var/log/thingsboard

volumes:
  kafka_data:
    name: ${VOLUME_KAFKA}
    external: true

  tb_data:
    name: ${VOLUME_THINGSBOARD}
    external: true

  log_data:
    name: ${VOLUME_LOG}
    external: true

  backup:
    name: ${VOLUME_BACKUP}
    external: true
